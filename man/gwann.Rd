% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gwann.R
\name{gwann}
\alias{gwann}
\title{Build a Geographically Weighted Artificial Neural Network.}
\usage{
gwann(
  x_train,
  y_train,
  w_train,
  x_pred,
  y_pred,
  w_train_pred,
  nrHidden = 4,
  batchSize = 10,
  optimizer = "nesterov",
  lr = 0.1,
  linOut = T,
  kernel = "gaussian",
  bandwidth = NA,
  adaptive = F,
  bwSearch = "goldenSection",
  bwMin = NA,
  bwMax = NA,
  steps = 20,
  iterations = NA,
  patience = 100,
  folds = 10,
  repeats = 1,
  threads = 4
)
}
\arguments{
\item{x_train}{Matrix of training data. Rows are observations, columns are independent variables.}

\item{y_train}{Vector. Values represent target values for the observations in \code{x_train}.}

\item{w_train}{Quadratic matrix of distances between the observations of \code{x_train}.}

\item{x_pred}{Matrix of prediction data. Rows are observations, columns are independent variables.}

\item{y_pred}{Vector. Values represent target values for the observations in \code{x_pred}.}

\item{w_train_pred}{Matrix of distances between the observations of \code{x_train} (rows) and \code{x_pred} (columns).}

\item{nrHidden}{Number of hidden neurons.}

\item{batchSize}{Batch size.}

\item{optimizer}{Optimizer (sgd, momentum, nesterov).}

\item{lr}{Learning rate.}

\item{kernel}{Kernel.}

\item{bandwidth}{Bandwidth size. If NA, it is determined using CV.}

\item{adaptive}{Adaptive instead of fixed bandwidth?}

\item{bwSearch}{Method for searching an appropriate bandwidth (goldenSection, grid, local). Ignored if bandwidth is explicitly given.}

\item{bwMin}{Lower limit for bandwidth search.}

\item{bwMax}{Upper limit for bandwidth search.}

\item{steps}{Number of bandwidths to test when doing a grid search/local search. Ignored if bandwidth is explicitly given or golden section search is used.}

\item{iterations}{Number of training iterations. If NA, it is determined using 10-fold CV.}

\item{patience}{After how many iterations with no improvement should training prematurely stop?}

\item{folds}{Number of cross-validation folds}

\item{repeats}{Number of repeats of cross-validation procedure}

\item{threads}{Number of threads to use.}
}
\value{
A list of five elements.
The first element \code{predictions} contains the predictions.
The second elemnt \code{weights} contains the connection weights of the hidden neurons to the output neurons.
The third element \code{rmse} is the mean RMSE of the CV procedure.
The fourth element \code{bandwidth} is the bandwidth that is used to train the final model.
The fifth element \code{iterations} is the numer of training iterations for the final model.
}
\description{
Build a Geographically Weighted Artificial Neural Network.
}
\examples{
data(toy4)

dm<-as.matrix( dist(toy4[,c("lon","lat")])  )
x<-as.matrix(toy4[,c("x1","x2")])
y<-as.numeric( toy4[,c("y")] )

\dontrun{
r<-gwann(x_train=x_train,y_train=y_train,w_train=dm,x_pred=x_train,y_pred=y_train,w_train_pred=dm,nrHidden=5,batchSize=100,lr=0.01,adaptive=F,#bandwidth=10,bwSearch="goldenSection",bwMin=min(dm)/4, bwMax=max(dm)/4, steps=10,threads=8)

if( all ( sapply( c("ggplot2","reshape2","viridis"), require, character.only=T ) ) ) {
   s<-cbind( Prediction=diag(r$predictions), toy4[,c("lon","lat")] )
   ggplot(s,aes(lon,lat,fill=Prediction)) + geom_raster() + scale_fill_viridis() + coord_fixed()
}
}
}
\references{
Hagenauer, Julian, and Marco Helbich. "A geographically weighted artificial neural network." International Journal of Geographical Information Science (2021): 1-21.
}
