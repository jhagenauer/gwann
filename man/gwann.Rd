% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gwann.R
\name{gwann}
\alias{gwann}
\title{Build a Geographically Weighted Artificial Neural Network.}
\usage{
gwann(x, y, dmX, dmP, nrHidden = 4, batchSize = 10,
  optimizer = "nesterov", lr = 0.1, linOut = T,
  kernel = "gaussian", bandwidth = NA, adaptive = F,
  iterations = NA, patience = 100, threads = 4)
}
\arguments{
\item{x}{Matrix. Rows are observations, columns are independent variables.}

\item{y}{Vector. Values represent target values for the observations in \code{x}.}

\item{dmX}{Matrix of distances between the observations of \code{x}.}

\item{dmP}{Matrix of distances between the observations of \code{x} (Rows) and some prediction locations (Columns).}

\item{nrHidden}{Number of hidden neurons.}

\item{batchSize}{Batch size.}

\item{optimizer}{Optimizer.}

\item{lr}{Learning rate.}

\item{kernel}{Kernel.}

\item{bandwidth}{Bandwidth size. If NA, it is determined using 10-fold CV.}

\item{adaptive}{Adaptive instead of fixed bandwidth?}

\item{iterations}{Number of training iterations. If NA, is determined using 10-fold CV.}

\item{patience}{After how many iterations with no improvement should training prematurly stop?}

\item{threads}{Number of threads to use.}
}
\value{
A list with two elements.
The first element is the vector \code{predictions} which contains the predictions for the locations defined by \code{dmP}.
The second elemnt is the matrix \code{weights} which contains the connection weights of the hidden neurons to the output neurons. The output neurons refer to the positions defined by \code{dmP}.
}
\description{
Build a Geographically Weighted Artificial Neural Network.
}
\examples{
data(toy4)

dm<-as.matrix( dist(toy4[,c("lon","lat")])  )
x<-as.matrix(toy4[,c("x1","x2")])
y<-as.numeric( toy4[,c("y")] )

\dontrun{
r<-gwann(x=x,y=y,dmX=dm,dmP=dm,nrHidden=8,batchSize=50,bandwidth=1.49)

if( all ( sapply( c("ggplot2","reshape2","viridis"), require, character.only=T ) ) ) {
   s<-cbind( Prediction=diag(r$predictions), toy4[,c("lon","lat")] )
   ggplot(s,aes(lon,lat,fill=Prediction)) + geom_raster() + scale_fill_viridis() + coord_fixed()
}
}
}
\references{
Not yet published
}
