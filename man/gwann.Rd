% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gwann.R
\name{gwann}
\alias{gwann}
\title{Build a Geographically Weighted Artificial Neural Network.}
\usage{
gwann(
  x_train,
  y_train,
  w_train,
  x_pred,
  w_pred,
  norm = T,
  nrHidden = ncol(x_train) * 2,
  batchSize = 50,
  optimizer = "nesterov",
  lr = 0.05,
  linOut = T,
  kernel = "gaussian",
  bandwidth = NA,
  adaptive = F,
  bwSearch = "goldenSection",
  bwMin = NA,
  bwMax = NA,
  steps = 20,
  adj = T,
  iterations = NA,
  cv_max_iterations = Inf,
  cv_patience = 999,
  cv_folds = 10,
  cv_repeats = 1,
  permutations = 0,
  threads = 4
)
}
\arguments{
\item{x_train}{Matrix of training data. Rows are observations, columns are independent variables.}

\item{y_train}{Vector. Values represent target values for the observations in \code{x_train}.}

\item{w_train}{Quadratic matrix of distances between the observations of \code{x_train}. The matrix solely used for calculating the adaptive distances.}

\item{x_pred}{Matrix of prediction data. Rows are observations, columns are independent variables.}

\item{w_pred}{Matrix of distances between the observations of \code{x_train} (rows) and \code{x_pred} (columns).}

\item{norm}{Center and scale variables before training? This affects the final model and the CV-procedure.}

\item{nrHidden}{Number of hidden neurons.}

\item{batchSize}{Batch size.}

\item{optimizer}{Optimizer (sgd, momentum, nesterov, adam).}

\item{lr}{Learning rate.}

\item{kernel}{Kernel (gaussian, bisquare, boxcar, exponential, tricube).}

\item{bandwidth}{Bandwidth size. If NA, it is determined using CV.}

\item{adaptive}{Adaptive instead of fixed bandwidth?}

\item{bwSearch}{Method for searching an appropriate bandwidth (goldenSection or grid). Ignored if bandwidth is explicitly given.}

\item{bwMin}{Lower limit for bandwidth search.}

\item{bwMax}{Upper limit for bandwidth search.}

\item{steps}{Number of bandwidths to test when doing a grid search/local search. Ignored if bandwidth is explicitly given or golden section search is used.}

\item{iterations}{Number of training iterations. If NA, it is determined using 10-fold CV. If given, \code{cv_max_iterations} and \code{cv_patience} are ignored.}

\item{cv_max_iterations}{Maximum number of iterations during CV.}

\item{cv_patience}{After how many iterations with no improvement should training during CV prematurely stop?}

\item{cv_folds}{Number of CV folds.}

\item{cv_repeats}{Number of repeats of CV.}

\item{permutations}{Number of permutations for calculating feature importance (EXPERIMENTAL and full of bugs. Do not use yet!).}

\item{threads}{Number of threads to use.}
}
\value{
A list of several elements.
The first element \code{predictions} contains the predictions.
The second element \code{weights} contains the connection weights of the hidden neurons to the output neurons.
The third element \code{bandwidth} is the bandwidth that is used to train the final model.
The fourth element \code{iterations} is the number of training iterations for the final model.
The fifth element \code{seconds} is the number of seconds it took to build the final model.
The sixth element \code{gwann} is the trained GWANN model as Java object.
}
\description{
Build a Geographically Weighted Artificial Neural Network.
}
\examples{
\dontrun{
#' data(toy4)

dm<-as.matrix( dist(toy4[,c("lon","lat")])  )
x<-as.matrix(toy4[,c("x1","x2")])
y<-as.numeric( toy4[,c("y")] )

r<-gwann(x_train=x,y_train=y,w_train=dm,x_pred=x,w_pred=dm,nrHidden=5,batchSize=100,lr=0.01,adaptive=F,bwSearch="goldenSection",bwMin=min(dm)/4, bwMax=max(dm)/4, steps=10,threads=8)
}
}
\references{
Julian Hagenauer & Marco Helbich (2022) A geographically weighted artificial neural network, International Journal of Geographical Information Science, 36:2, 215-235, DOI: 10.1080/13658816.2021.1871618
}
